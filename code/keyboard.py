from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime, timedelta

count = -1
admin_count = -1

def main_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ üì®", callback_data="new_post"), InlineKeyboardButton(text="–ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üìë", callback_data="posts_user"), InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å —Ç–∞—Ä–∏—Ñ üè¶", callback_data="payment_tariff"), InlineKeyboardButton(text="–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è ‚ùì", callback_data="support"))
	
def back_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup().add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu"))
	
def calendar_menu() -> InlineKeyboardMarkup:
	buttons = []
	for i in range(7):
		date = datetime.now() + timedelta(days=i)
		button_text = date.strftime("%d.%m")
		buttons.append(InlineKeyboardButton(text=button_text, callback_data=f"date_{button_text}"))
	return InlineKeyboardMarkup(row_width=4).add(*buttons).add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu"))
	
def confirm_sending_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å ‚úÖ", callback_data="sending_true"), InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu_delete_post"))
	
def posts_user_menu(users_post: list, change=0) -> InlineKeyboardMarkup:
	global count
	if change == 0:
		count += 1
	elif change == 1:
		count -= 1
	else:
		count = 0
		
	if count < 0:
		count = 0
		
	buttons_post = []
	smailes = {"send": "üì©", "cancelled": "‚ùå", "successfully": "‚úÖ", "check": "üïµ‚Äç‚ôÇÔ∏è"}
	for index, post in enumerate(users_post):
		buttons_post.append(InlineKeyboardButton(text=f"\"{post[4][:10]}...\" {smailes.get(f'{post[7]}')}", callback_data=f"post_id={post[0]}"))
		if len(buttons_post) == 6:
			break
			
	if not buttons_post:
		count -= 1
		
	return InlineKeyboardMarkup(row_width=2).add(*buttons_post).add(InlineKeyboardButton(text='‚¨ÖÔ∏èÔ∏è', callback_data=f"post_previous_slide_{count-1}"), InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'post_next_slide_{count+1}')).add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu"))
	
def action_post_menu(status: str) -> InlineKeyboardMarkup():
	if status == "send" or status == 'check':
		return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é ‚ùå', callback_data='cancelled_post'), InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu_delete_post"))
	else:
		return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu_delete_post"))
		

def back_and_past_menu(text: str) -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text=text, callback_data="past_step"), InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu"))
	
def calendar_and_past_menu(text: str) -> InlineKeyboardMarkup:
	buttons = []
	for i in range(7):
		date = datetime.now() + timedelta(days=i)
		button_text = date.strftime("%d.%m")
		buttons.append(InlineKeyboardButton(text=button_text, callback_data=f"date_{button_text}"))
	return InlineKeyboardMarkup(row_width=4).add(InlineKeyboardButton(text=text, callback_data="past_step")).add(*buttons).add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu"))
	
def confirm_sending_and_past_menu(text: str) -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text=text, callback_data="past_step")).add(InlineKeyboardButton(text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å ‚úÖ", callback_data="sending_true"), InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu_delete_post"))
	
def tariffs_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text="1 –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ üßæ 100‚ÇΩ", callback_data="post=1_payment=100")).add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu"))
	
def payment_menu(payment: tuple) -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=2).add(InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å ‚úÖ", url=f"{payment[0]}"), InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å ‚òëÔ∏è", callback_data=f"check_{payment[1]}")).add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu"))
	
def dops_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ üì∏", callback_data="past_step_file"), InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ–ø–∏—Å–∞–Ω–∏—é üìù", callback_data="past_step_text"), InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –¥–∞—Ç–µ üóì", callback_data="past_step_date"), InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫–æ –≤—Ä–µ–º–µ–Ω–∏ ‚è∞", callback_data="past_step_time")).add(InlineKeyboardButton(text="–û–±—Ä–∞—Ç–Ω–æ ‚Ü©Ô∏è", callback_data="back"))
	
def support_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text='–ü–æ–¥–¥–µ—Ä–∂–∫–∞ üë©‚Äçüíª', callback_data="support_request"), InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç üè†", callback_data="get_main_menu"))
	
def supported_menu(user_id: int) -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup().add(InlineKeyboardButton(text="–û—Ç–≤–µ—Ç–∏—Ç—å ‚úÖ", callback_data=f"answer_{user_id}"))

def admin_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text='–í—ã–¥–∞—Ç—å –ø–æ—Å—Ç—ã', callback_data='give_posts'), InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞', callback_data='mailing'), InlineKeyboardButton(text='–ü–æ—Å—Ç—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É', callback_data='checking_posts'))

def return_admin_menu(text: str = '–û—Ç–º–µ–Ω–∞') -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup().add(InlineKeyboardButton(text=text, callback_data='cancel'))

def confirm_mailing_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup().add(InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é', callback_data='confirm_mailing'), InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancelled_mailing'))

def check_posts_menu(posts: list, change: int = 0) -> InlineKeyboardMarkup:
	global admin_count
	if change == 0:
		admin_count += 1
	elif change == 1:
		admin_count -= 1
	else:
		admin_count = 0

	if admin_count < 0:
		admin_count = 0

	buttons_post = []
	for index, post in enumerate(posts):
		buttons_post.append(InlineKeyboardButton(text=f"\"{post[4][:10]}...\"", callback_data=f"post_id={post[0]}"))
		if len(buttons_post) == 6:
			break

	if not buttons_post:
		admin_count -= 1

	return InlineKeyboardMarkup(row_width=2).add(*buttons_post).add(
		InlineKeyboardButton(text='‚¨ÖÔ∏èÔ∏è', callback_data=f"post_previous_slide_{admin_count - 1}"),
		InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'post_next_slide_{admin_count + 1}')).add(
		InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel'))

def action_for_post_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text='–†–∞–∑—Ä–µ—à–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é', callback_data='true'), InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é', callback_data='false'))

def cause_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ –ø—Ä–∏—á–∏–Ω—É', callback_data='input_cause'), InlineKeyboardButton(text='–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã', callback_data='no_cause'))

def delete_message_menu() -> InlineKeyboardMarkup:
	return InlineKeyboardMarkup().add(InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ‚ùå', callback_data='delete_message'))